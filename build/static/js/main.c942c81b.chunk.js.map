{"version":3,"sources":["components/Form/Form.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["Form","state","name","number","handleSubmit","event","preventDefault","props","onSubmit","reset","handleChange","currentTarget","value","setState","this","type","pattern","title","required","onChange","disabled","Component","Filter","ContactList","contacts","deleteContact","map","id","onClick","App","initialContacts","filter","addContact","some","elm","console","log","alert","contact","shortId","generate","changeFilter","getFilteredContacts","normalizedFilter","toLowerCase","includes","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qhBA0DeA,E,4MAvDXC,MAAQ,CACJC,KAAM,GACNC,OAAQ,I,EAEZC,aAAe,SAAAC,GACXA,EAAMC,iBACN,EAAKC,MAAMC,SAAS,EAAKP,OACzB,EAAKQ,S,EAITC,aAAe,SAAAL,GACX,MAAwBA,EAAMM,cAAtBT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBX,EAAOU,K,EAG5BH,MAAQ,WACJ,EAAKI,SAAS,CAAEX,KAAM,GAAIC,OAAQ,M,4CAGtC,WACI,OAAQ,gCACJ,gDACI,uBAAMK,SAAUM,KAAKV,aAArB,UACI,yCACI,uBACIW,KAAK,OACLb,KAAK,OACLc,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRN,MAAOE,KAAKb,MAAMC,KAClBiB,SAAUL,KAAKJ,kBAGvB,2CACI,uBACIK,KAAK,MACLb,KAAK,SACLc,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRN,MAAOE,KAAKb,MAAME,OAClBgB,SAAUL,KAAKJ,kBAGvB,wBAAQK,KAAK,SAASK,UAAWN,KAAKb,MAAMC,OAASY,KAAKb,MAAME,OAAhE,uBAGR,sD,GAlDOkB,aCOJC,EAPA,SAAC,GAAD,IAAGV,EAAH,EAAGA,MAAOO,EAAV,EAAUA,SAAV,OACX,yDAEI,uBAAQJ,KAAK,OAAOH,MAAOA,EAAOO,SAAUA,QCiBrCI,EApBK,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cAC7B,OACI,6BAEQD,EAASE,KAAI,gBAAGC,EAAH,EAAGA,GAAIzB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OAET,+BACKD,EADL,IACYC,EACR,wBAAQY,KAAK,SACTa,QAAS,WAAQH,EAAcE,IADnC,sBAFKA,S,iCC2DdE,E,4MAvDb5B,MAAQ,CACNuB,SAAUM,EACVC,OAAQ,I,EAEVC,WAAa,YAAuB,IAApB9B,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACpB,GAAI,EAAKF,MAAMuB,SAASS,MAAK,SAAAC,GAAG,OAAIA,EAAIhC,OAASA,KAC/CiC,QAAQC,IAAIC,MAAM,GAAD,OAAInC,EAAJ,iCADnB,CAIA,IAAMoC,EAAU,CACdX,GAAIY,IAAQC,WACZtC,OACAC,UAEF,EAAKU,UAAS,gBAAGW,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,CAAEc,GAAH,mBAAed,U,EAI3BiB,aAAe,SAAApC,GACb,EAAKQ,SAAS,CACZkB,OAAQ1B,EAAMM,cAAcC,S,EAGhC8B,oBAAsB,WACpB,IAAMC,EAAmB,EAAK1C,MAAM8B,OAAOa,cAC3C,OAAO,EAAK3C,MAAMuB,SAASO,QAAO,SAAAO,GAAO,OAAIA,EAAQpC,KAAK0C,cAAcC,SAASF,O,EAKnFlB,cAAgB,SAAAqB,GACd,EAAKjC,UAAS,kBAAmB,CAC/BW,SADY,EAAGA,SACIO,QAAO,SAAAO,GAAO,OAAIA,EAAQX,KAAOmB,U,4CAKxD,WACE,IAAMJ,EAAsB5B,KAAK4B,sBACjC,OACE,gCACE,2CACA,cAAC,EAAD,CAAMlC,SAAUM,KAAKkB,aACrB,0CACA,cAAC,EAAD,CAAQpB,MAAOE,KAAKb,MAAM8B,OAAQZ,SAAUL,KAAK2B,eACjD,cAAC,EAAD,CACEjB,SAAUkB,EACVjB,cAAeX,KAAKW,uB,GAjDZJ,a,MCNlB0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c942c81b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nclass Form extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.reset();\r\n\r\n    }\r\n\r\n    handleChange = event => {\r\n        const { name, value } = event.currentTarget;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({ name: '', number: '' });\r\n    }\r\n\r\n    render() {\r\n        return (<div>\r\n            <section>Phonebook\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label>Name\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                            required\r\n                            value={this.state.name}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </label>\r\n                    <label>Number\r\n                        <input\r\n                            type=\"tel\"\r\n                            name=\"number\"\r\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                            required\r\n                            value={this.state.number}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </label>\r\n                    <button type='submit' disabled={!this.state.name || !this.state.number}>Add</button>\r\n                </form>\r\n            </section>\r\n            <section>Contacts\r\n            </section>\r\n        </div >\r\n        )\r\n    }\r\n}\r\nexport default Form;\r\n\r\n\r\nForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    < label >\r\n        Find contact by name\r\n        < input type=\"text\" value={value} onChange={onChange} ></input >\r\n    </label >\r\n\r\n);\r\nexport default Filter;\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n};","import PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n    return (\r\n        <ul>\r\n            {\r\n                contacts.map(({ id, name, number }) =>\r\n                (\r\n                    <li key={id}>\r\n                        {name}:{number}\r\n                        <button type=\"button\"\r\n                            onClick={() => { deleteContact(id) }}\r\n                        >Delete\r\n                        </button>\r\n                    </li>\r\n                ))\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        })\r\n    ),\r\n    deleteContact: PropTypes.func.isRequired\r\n}","import React, { Component } from 'react';\r\nimport Form from \"./components/Form/Form\"\r\nimport Filter from './components/Filter/Filter';\r\nimport ContactList from \"./components/ContactList/ContactList\"\r\nimport initialContacts from \"./components/initialContacts.json\"\r\n\r\n\r\nimport \"./base.css\"\r\nimport shortId from 'shortid';\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: initialContacts,\r\n    filter: ''\r\n  }\r\n  addContact = ({ name, number }) => {\r\n    if (this.state.contacts.some(elm => elm.name === name)) {\r\n      console.log(alert(`${name} is already in contacts`));\r\n      return;\r\n    }\r\n    const contact = {\r\n      id: shortId.generate(),\r\n      name,\r\n      number,\r\n    };\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [contact, ...contacts],\r\n    }));\r\n  };\r\n\r\n  changeFilter = event => {\r\n    this.setState({\r\n      filter: event.currentTarget.value,\r\n    });\r\n  };\r\n  getFilteredContacts = () => {\r\n    const normalizedFilter = this.state.filter.toLowerCase();\r\n    return this.state.contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter)\r\n    ,);\r\n  };\r\n\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(({ contacts }) => ({\r\n      contacts: contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n\r\n  render() {\r\n    const getFilteredContacts = this.getFilteredContacts();\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <Form onSubmit={this.addContact} />\r\n        <h2>Contacts</h2>\r\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\r\n        <ContactList\r\n          contacts={getFilteredContacts}\r\n          deleteContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.js';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}